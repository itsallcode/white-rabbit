plugins {
    id 'eclipse'
    id "org.sonarqube" version "3.1"
    id "org.jetbrains.gradle.plugin.idea-ext" version "0.10"
    id 'com.github.johnrengelman.shadow' version '6.1.0' apply false
    id "com.moowork.node" version "1.3.1" apply false
}

ext {
    junitVersion = '5.7.0'
    log4jVersion = '2.14.0'
    mockitoVersion = '3.7.0'
    yassonVersion = '1.0.8'
    jsonBindApiVersion = '1.0'
}

def getProjectVersion() {
    if(project.hasProperty("releaseVersion")) {
        return project.property("releaseVersion")
    }
    return "dev-SNAPSHOT"
}

subprojects {
    if(!['logic', 'textui', 'jfxui'].contains(project.name)) {
        return
    }
    apply plugin: "java"
    apply plugin: "jacoco"

    version = getProjectVersion()

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    dependencies {
        implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
        runtimeOnly "org.apache.logging.log4j:log4j-core:$log4jVersion"

        testImplementation "org.assertj:assertj-core:3.18.1"
        testImplementation "org.mockito:mockito-core:$mockitoVersion"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "org.junit-pioneer:junit-pioneer:1.1.0"
        testImplementation "nl.jqno.equalsverifier:equalsverifier:3.5.1"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    rootProject.tasks["sonarqube"].dependsOn(tasks["jacocoTestReport"])
}
