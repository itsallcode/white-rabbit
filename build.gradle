plugins {
    id 'eclipse'
    id "org.sonarqube" version "3.0"
    id "org.jetbrains.gradle.plugin.idea-ext" version "0.9"
    id "com.moowork.node" version "1.3.1" apply false
}

ext {
    junitVersion = '5.6.2'
    log4jVersion = '2.13.3'
    mockitoVersion = '3.4.6'
}

def getProjectVersion() {
    if(project.hasProperty("releaseVersion")) {
        return project.property("releaseVersion")
    }
    return "dev-SNAPSHOT"
}

def getPlatform() {
    if(project.hasProperty("platform")) {
        return project.property("platform").toString()
    }

    def os = org.gradle.internal.os.OperatingSystem.current()
    return os.windows ? 'win' : (os.linux ? 'linux' : (os.mac ? 'mac' : 'unknown'))
}

allprojects {
    apply plugin: "java"
    apply plugin: "jacoco"

    version = getProjectVersion()
    sourceCompatibility = 11
    targetCompatibility = 11

    ext {
        platform = getPlatform()
    }

    repositories {
        jcenter()
    }

    dependencies {
        implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
        runtimeOnly "org.apache.logging.log4j:log4j-core:$log4jVersion"

        testImplementation "org.assertj:assertj-core:3.16.1"
        testImplementation "org.mockito:mockito-core:$mockitoVersion"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "org.junit-pioneer:junit-pioneer:1.0.0"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    rootProject.tasks["sonarqube"].dependsOn(tasks["jacocoTestReport"])
}

