name: Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - uses: gradle/wrapper-validation-action@v1
    - name: Cache Gradle packages and wrapper
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-
    - name: Cache npm files
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Configure webstart
      run: |
        cp .github/workflows/webstart.properties.template webstart/webstart.properties
        cp .github/workflows/infrastructure-config.ts.template webstart-infrastructure/config.ts

    - name: Build with Gradle
      run: |
        ./gradlew build --warning-mode=summary
    - name: Sonar analysis
      run: |
        ./gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io \
                            -Dsonar.organization=itsallcode \
                            -Dsonar.login=$SONAR_TOKEN \
                            --warning-mode=summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Publish Test Report
      uses: scacap/action-surefire-report@v1
      if: always()
      with:
        report_paths: '**/build/test-results/*/TEST-*.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Archive jfxui binary
      uses: actions/upload-artifact@v2
      with:
        name: jfxui
        path: jfxui/build/libs/white-rabbit-fx-*.jar

    - name: Build webstart infrastructure
      run: |
        cd webstart-infrastructure
        npm ci
        npm run build
