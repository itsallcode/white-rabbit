name: Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    strategy:
      matrix:
        java: [17]
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    name: Build on ${{ matrix.os }} with Java ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    env:
      DEFAULT_JAVA: 17
      DEFAULT_OS: 'ubuntu-latest'

    steps:

    - uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow

    - uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}

    - uses: gradle/wrapper-validation-action@v1

    - name: Cache Gradle packages and wrapper
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-java-${{ matrix.java }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-java-${{ matrix.java }}-gradle

    - name: Cache SonarQube packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-java-${{ matrix.java }}-sonar
        restore-keys: ${{ runner.os }}-java-${{ matrix.java }}-sonar

    - name: Build with Gradle
      if: ${{ env.DEFAULT_OS == matrix.os }}
      run: |
        ./gradlew build --warning-mode=summary -PskipFlakyTests=true

    - name: Sonar analysis
      if: ${{ env.DEFAULT_JAVA == matrix.java && env.DEFAULT_OS == matrix.os && env.SONAR_TOKEN != null }}
      run: |
        ./gradlew sonarqube -Dsonar.login=$SONAR_TOKEN --warning-mode=summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Publish Test Report for Java ${{ matrix.java }} on ${{ runner.os }}
      uses: scacap/action-surefire-report@v1
      if:  ${{ always() && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
      with:
        report_paths: '**/build/test-results/*/TEST-*.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive jfxui binary
      uses: actions/upload-artifact@v2
      if: ${{ env.DEFAULT_JAVA == matrix.java && env.DEFAULT_OS == matrix.os }}
      with:
        name: jfxui
        path: jfxui/build/libs/white-rabbit-fx-*.jar

    - name: Build native package for ${{ runner.os }}
      if: ${{ env.DEFAULT_JAVA == matrix.java }}
      run: |
        ./gradlew jpackage createChecksums --warning-mode=summary
    
    - name: Archive native package
      uses: actions/upload-artifact@v2
      if: ${{ env.DEFAULT_JAVA == matrix.java }}
      with:
        name: native-package-${{ matrix.java }}
        path: jfxui/build/jpackage-dist/*

    - name: Archive checksums
      uses: actions/upload-artifact@v2
      if: ${{ env.DEFAULT_JAVA == matrix.java }}
      with:
        name: checksums
        path: jfxui/build/generatedChecksums/*
