name: Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: gradle/wrapper-validation-action@v1
    - name: Cache Gradle packages and wrapper
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Configure webstart
      run: |
        cat > webstart/webstart.properties << EOF
        keystoreFile = keystore.jks
        keystorePassword = password
        keystoreAlias = whiterabbit-webstart
        domain = whiterabbit.example.com
        s3Bucket = whiterabbit-webstart-bucket
        cloudfrontDistribution = XXXXXXXXXXXXXX
        EOF

    - name: Configure webstart-infrastructure
      run: |
        cat > webstart-infrastructure/config.ts << EOF
        import { InfrastructureConfig } from "./lib/config-interface";
        export const CONFIG: InfrastructureConfig = {
            region: 'eu-west-1',
            domain: "whiterabbit.example.com",
            hostedZoneName: "example.com.",
            sslCertificateArn: "arn:aws:acm:us-east-1:000000000000:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
            stackName: "whiterabbit-webstart"
        };
        EOF

    - name: Build with Gradle
      run: |
        ./gradlew build --info --stacktrace --warning-mode=summary
    - name: Sonar analysis
      run: |
        ./gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io \
                            -Dsonar.organization=itsallcode \
                            -Dsonar.login=$SONAR_TOKEN \
                            --info --stacktrace --warning-mode=summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Publish Test Report
      uses: scacap/action-surefire-report@v1
      if: always()
      with:
        report_paths: '**/build/test-results/*/TEST-*.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Archive jfxui binary
      uses: actions/upload-artifact@v2
      with:
        name: jfxui
        path: jfxui/build/libs/white-rabbit-fx-*.jar
